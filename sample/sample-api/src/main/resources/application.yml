spring:
  application:
    name: sample
  redis:
    url: redis://:@127.0.0.1:6380 # 和 host，port, username, password配置效果一样
    host: localhost
    username: ''
    password: ''
    port: 6380
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver # org.h2.Driver
    url: jdbc:mysql://localhost:3306/sample # jdbc:h2:file:/tmp/sample
    username: root
    password:
  sql:
    init:
      schema-locations: classpath:db/schema-h2.sql
      data-locations: classpath:db/data-h2.sql
      mode: always
  h2:
    console:
      path: /h2-console
      enabled: true
  quartz:
    job-store-type: jdbc # 可选 memory
    jdbc:
      initialize-schema: never
    properties:
      org.quartz.scheduler.instanceName: ${spring.application.name}
      org.quartz.threadPool.threadCount: 5
      # 数据库相关配置
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
      org.quartz.jobStore.dataSource: myDS
      org.quartz.dataSource.myDS.provider: hikaricp
      org.quartz.dataSource.myDS.driver: com.mysql.cj.jdbc.Driver #org.h2.Driver
      org.quartz.dataSource.myDS.URL: jdbc:mysql://localhost:3306/quartz #jdbc:h2:file:/tmp/quartz
      org.quartz.dataSource.myDS.user: root
      org.quartz.dataSource.myDS.password:
      # 集群相关配置
      org.quartz.jobStore.isClustered: true
      org.quartz.jobStore.clusterCheckinInterval: 20000
      org.quartz.scheduler.instanceId: AUTO
server:
  port: 8080
infra:
  trace:
    enabled: false # 是否开启trace
    zipkin:
      url: "http://localhost:9411/api/v2/spans"
      sampler: "1.0F"
grpc:
  pure:
    app-name: greeter
    server:
      port: 9999
    discovery:
      type: direct # direct 直连，nacos 使用nacos作为注册中心
      nacos:
        address: 127.0.0.1:8848
        username: nacos
        password: nacos
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /management
  endpoint:
    health:
      show-details: "always"
      enabled: false
  server:
    port: 7777
springdoc:
  use-management-port: true